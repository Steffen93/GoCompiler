Terminals unused in grammar

   "block"


State 31 conflicts: 1 shift/reduce


Grammar

    0 $accept: unit "end of file"

    1 unit: assignments exp

    2 function: "func" "identifier" "(" paramList ")" type "{" funcBody "}"

    3 paramList: %empty
    4          | parameter paramList
    5          | "," paramList

    6 parameter: "identifier" type

    7 type: %empty
    8     | "identifier"

    9 funcBody: "identifier" ":=" exp funcBody
   10         | "return" exp
   11         | %empty

   12 assignments: %empty
   13            | assignments function
   14            | assignments assignment

   15 assignment: "identifier" ":=" exp

   16 exp: exp "+" exp
   17    | exp "-" exp
   18    | exp "*" exp
   19    | exp "/" exp
   20    | "(" exp ")"
   21    | "identifier"
   22    | "number"
   23    | "zahl"
   24    | "sign"
   25    | "funccall"
   26    | "text"


Terminals, with rules where they appear

"end of file" (0) 0
error (256)
":=" (258) 9 15
"-" (259) 17
"+" (260) 16
"*" (261) 18
"/" (262) 19
"(" (263) 2 20
")" (264) 2 20
"{" (265) 2
"}" (266) 2
"," (267) 5
"func" (268) 2
"return" (269) 10
"identifier" (270) 2 6 8 9 15 21
"number" (271) 22
"text" (272) 26
"zahl" (273) 23
"sign" (274) 24
"block" (275)
"funccall" (276) 25


Nonterminals, with rules where they appear

$accept (22)
    on left: 0
unit (23)
    on left: 1, on right: 0
function (24)
    on left: 2, on right: 13
paramList (25)
    on left: 3 4 5, on right: 2 4 5
parameter (26)
    on left: 6, on right: 4
type (27)
    on left: 7 8, on right: 2 6
funcBody (28)
    on left: 9 10 11, on right: 2 9
assignments (29)
    on left: 12 13 14, on right: 1 13 14
assignment (30)
    on left: 15, on right: 14
exp (31)
    on left: 16 17 18 19 20 21 22 23 24 25 26, on right: 1 9 10 15
    16 17 18 19 20


State 0

    0 $accept: . unit "end of file"

    $default  reduce using rule 12 (assignments)

    unit         go to state 1
    assignments  go to state 2


State 1

    0 $accept: unit . "end of file"

    "end of file"  shift, and go to state 3


State 2

    1 unit: assignments . exp
   13 assignments: assignments . function
   14            | assignments . assignment

    "("           shift, and go to state 4
    "func"        shift, and go to state 5
    "identifier"  shift, and go to state 6
    "number"      shift, and go to state 7
    "text"        shift, and go to state 8
    "zahl"        shift, and go to state 9
    "sign"        shift, and go to state 10
    "funccall"    shift, and go to state 11

    function    go to state 12
    assignment  go to state 13
    exp         go to state 14


State 3

    0 $accept: unit "end of file" .

    $default  accept


State 4

   20 exp: "(" . exp ")"

    "("           shift, and go to state 4
    "identifier"  shift, and go to state 15
    "number"      shift, and go to state 7
    "text"        shift, and go to state 8
    "zahl"        shift, and go to state 9
    "sign"        shift, and go to state 10
    "funccall"    shift, and go to state 11

    exp  go to state 16


State 5

    2 function: "func" . "identifier" "(" paramList ")" type "{" funcBody "}"

    "identifier"  shift, and go to state 17


State 6

   15 assignment: "identifier" . ":=" exp
   21 exp: "identifier" .

    ":="  shift, and go to state 18

    $default  reduce using rule 21 (exp)


State 7

   22 exp: "number" .

    $default  reduce using rule 22 (exp)


State 8

   26 exp: "text" .

    $default  reduce using rule 26 (exp)


State 9

   23 exp: "zahl" .

    $default  reduce using rule 23 (exp)


State 10

   24 exp: "sign" .

    $default  reduce using rule 24 (exp)


State 11

   25 exp: "funccall" .

    $default  reduce using rule 25 (exp)


State 12

   13 assignments: assignments function .

    $default  reduce using rule 13 (assignments)


State 13

   14 assignments: assignments assignment .

    $default  reduce using rule 14 (assignments)


State 14

    1 unit: assignments exp .
   16 exp: exp . "+" exp
   17    | exp . "-" exp
   18    | exp . "*" exp
   19    | exp . "/" exp

    "-"  shift, and go to state 19
    "+"  shift, and go to state 20
    "*"  shift, and go to state 21
    "/"  shift, and go to state 22

    $default  reduce using rule 1 (unit)


State 15

   21 exp: "identifier" .

    $default  reduce using rule 21 (exp)


State 16

   16 exp: exp . "+" exp
   17    | exp . "-" exp
   18    | exp . "*" exp
   19    | exp . "/" exp
   20    | "(" exp . ")"

    "-"  shift, and go to state 19
    "+"  shift, and go to state 20
    "*"  shift, and go to state 21
    "/"  shift, and go to state 22
    ")"  shift, and go to state 23


State 17

    2 function: "func" "identifier" . "(" paramList ")" type "{" funcBody "}"

    "("  shift, and go to state 24


State 18

   15 assignment: "identifier" ":=" . exp

    "("           shift, and go to state 4
    "identifier"  shift, and go to state 15
    "number"      shift, and go to state 7
    "text"        shift, and go to state 8
    "zahl"        shift, and go to state 9
    "sign"        shift, and go to state 10
    "funccall"    shift, and go to state 11

    exp  go to state 25


State 19

   17 exp: exp "-" . exp

    "("           shift, and go to state 4
    "identifier"  shift, and go to state 15
    "number"      shift, and go to state 7
    "text"        shift, and go to state 8
    "zahl"        shift, and go to state 9
    "sign"        shift, and go to state 10
    "funccall"    shift, and go to state 11

    exp  go to state 26


State 20

   16 exp: exp "+" . exp

    "("           shift, and go to state 4
    "identifier"  shift, and go to state 15
    "number"      shift, and go to state 7
    "text"        shift, and go to state 8
    "zahl"        shift, and go to state 9
    "sign"        shift, and go to state 10
    "funccall"    shift, and go to state 11

    exp  go to state 27


State 21

   18 exp: exp "*" . exp

    "("           shift, and go to state 4
    "identifier"  shift, and go to state 15
    "number"      shift, and go to state 7
    "text"        shift, and go to state 8
    "zahl"        shift, and go to state 9
    "sign"        shift, and go to state 10
    "funccall"    shift, and go to state 11

    exp  go to state 28


State 22

   19 exp: exp "/" . exp

    "("           shift, and go to state 4
    "identifier"  shift, and go to state 15
    "number"      shift, and go to state 7
    "text"        shift, and go to state 8
    "zahl"        shift, and go to state 9
    "sign"        shift, and go to state 10
    "funccall"    shift, and go to state 11

    exp  go to state 29


State 23

   20 exp: "(" exp ")" .

    $default  reduce using rule 20 (exp)


State 24

    2 function: "func" "identifier" "(" . paramList ")" type "{" funcBody "}"

    ","           shift, and go to state 30
    "identifier"  shift, and go to state 31

    $default  reduce using rule 3 (paramList)

    paramList  go to state 32
    parameter  go to state 33


State 25

   15 assignment: "identifier" ":=" exp .
   16 exp: exp . "+" exp
   17    | exp . "-" exp
   18    | exp . "*" exp
   19    | exp . "/" exp

    "-"  shift, and go to state 19
    "+"  shift, and go to state 20
    "*"  shift, and go to state 21
    "/"  shift, and go to state 22

    $default  reduce using rule 15 (assignment)


State 26

   16 exp: exp . "+" exp
   17    | exp . "-" exp
   17    | exp "-" exp .
   18    | exp . "*" exp
   19    | exp . "/" exp

    "*"  shift, and go to state 21
    "/"  shift, and go to state 22

    $default  reduce using rule 17 (exp)


State 27

   16 exp: exp . "+" exp
   16    | exp "+" exp .
   17    | exp . "-" exp
   18    | exp . "*" exp
   19    | exp . "/" exp

    "*"  shift, and go to state 21
    "/"  shift, and go to state 22

    $default  reduce using rule 16 (exp)


State 28

   16 exp: exp . "+" exp
   17    | exp . "-" exp
   18    | exp . "*" exp
   18    | exp "*" exp .
   19    | exp . "/" exp

    $default  reduce using rule 18 (exp)


State 29

   16 exp: exp . "+" exp
   17    | exp . "-" exp
   18    | exp . "*" exp
   19    | exp . "/" exp
   19    | exp "/" exp .

    $default  reduce using rule 19 (exp)


State 30

    5 paramList: "," . paramList

    ","           shift, and go to state 30
    "identifier"  shift, and go to state 31

    $default  reduce using rule 3 (paramList)

    paramList  go to state 34
    parameter  go to state 33


State 31

    6 parameter: "identifier" . type

    "identifier"  shift, and go to state 35

    "identifier"  [reduce using rule 7 (type)]
    $default      reduce using rule 7 (type)

    type  go to state 36


State 32

    2 function: "func" "identifier" "(" paramList . ")" type "{" funcBody "}"

    ")"  shift, and go to state 37


State 33

    4 paramList: parameter . paramList

    ","           shift, and go to state 30
    "identifier"  shift, and go to state 31

    $default  reduce using rule 3 (paramList)

    paramList  go to state 38
    parameter  go to state 33


State 34

    5 paramList: "," paramList .

    $default  reduce using rule 5 (paramList)


State 35

    8 type: "identifier" .

    $default  reduce using rule 8 (type)


State 36

    6 parameter: "identifier" type .

    $default  reduce using rule 6 (parameter)


State 37

    2 function: "func" "identifier" "(" paramList ")" . type "{" funcBody "}"

    "identifier"  shift, and go to state 35

    $default  reduce using rule 7 (type)

    type  go to state 39


State 38

    4 paramList: parameter paramList .

    $default  reduce using rule 4 (paramList)


State 39

    2 function: "func" "identifier" "(" paramList ")" type . "{" funcBody "}"

    "{"  shift, and go to state 40


State 40

    2 function: "func" "identifier" "(" paramList ")" type "{" . funcBody "}"

    "return"      shift, and go to state 41
    "identifier"  shift, and go to state 42

    $default  reduce using rule 11 (funcBody)

    funcBody  go to state 43


State 41

   10 funcBody: "return" . exp

    "("           shift, and go to state 4
    "identifier"  shift, and go to state 15
    "number"      shift, and go to state 7
    "text"        shift, and go to state 8
    "zahl"        shift, and go to state 9
    "sign"        shift, and go to state 10
    "funccall"    shift, and go to state 11

    exp  go to state 44


State 42

    9 funcBody: "identifier" . ":=" exp funcBody

    ":="  shift, and go to state 45


State 43

    2 function: "func" "identifier" "(" paramList ")" type "{" funcBody . "}"

    "}"  shift, and go to state 46


State 44

   10 funcBody: "return" exp .
   16 exp: exp . "+" exp
   17    | exp . "-" exp
   18    | exp . "*" exp
   19    | exp . "/" exp

    "-"  shift, and go to state 19
    "+"  shift, and go to state 20
    "*"  shift, and go to state 21
    "/"  shift, and go to state 22

    $default  reduce using rule 10 (funcBody)


State 45

    9 funcBody: "identifier" ":=" . exp funcBody

    "("           shift, and go to state 4
    "identifier"  shift, and go to state 15
    "number"      shift, and go to state 7
    "text"        shift, and go to state 8
    "zahl"        shift, and go to state 9
    "sign"        shift, and go to state 10
    "funccall"    shift, and go to state 11

    exp  go to state 47


State 46

    2 function: "func" "identifier" "(" paramList ")" type "{" funcBody "}" .

    $default  reduce using rule 2 (function)


State 47

    9 funcBody: "identifier" ":=" exp . funcBody
   16 exp: exp . "+" exp
   17    | exp . "-" exp
   18    | exp . "*" exp
   19    | exp . "/" exp

    "-"           shift, and go to state 19
    "+"           shift, and go to state 20
    "*"           shift, and go to state 21
    "/"           shift, and go to state 22
    "return"      shift, and go to state 41
    "identifier"  shift, and go to state 42

    $default  reduce using rule 11 (funcBody)

    funcBody  go to state 48


State 48

    9 funcBody: "identifier" ":=" exp funcBody .

    $default  reduce using rule 9 (funcBody)
